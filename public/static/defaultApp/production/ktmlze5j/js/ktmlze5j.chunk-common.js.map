{"version":3,"sources":["webpack:///./src/store/modules sync [^index]\\.js$","webpack:///./src/init.js","webpack:///./src/App.vue?0adc","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/store/modules/index.js","webpack:///./src/store/index.js","webpack:///./src/router/index.js","webpack:///./src/router/mode.js","webpack:///./src/assets/js/utils/ws.js","webpack:///./src/assets/js/websocket/index.js","webpack:///./src/assets/js/websocket/data/data.js","webpack:///./src/assets/js/websocket/controller/record.js","webpack:///./src/main.js","webpack:///./src/store/modules/module0.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","u","html","to_ast","html_str","waitRemove","ast","parse","walk","enter","node","parent","attributeMap","type","SyntaxKind","Text","trimVal","value","trim","push","toString","Tag","includes","name","attr","attributes","attrMap","reduce","sum","item","obj","key","val","get_text","quote","defineProperty","get","set","close","slice","open","start","end","this","class","arr","replace","split","forEach","Array","isArray","cid","json","JSON5","body","console","error","splice","indexOf","str","div","document","createElement","innerHTML","innerText","to_html","res","i","join","rawName","leave","normalize","querySelectorAll","outerHTML","v","local","store","localStorage","getItem","JSON","parseInt","reset","assign","setItem","stringify","mixinData","coms","bodyClass","protoData","$win","window","$u","$cookie","Cookie","$axios","Axios","$get","url","data","config","params","$post","post","$vue","Vue","_vm","_h","$createElement","_c","_self","attrs","_l","index","_g","_b","tag","listeners","ite","inde","staticRenderFns","component","modulesFiles","require","modulePath","default","state","mutations","actions","use","Vuex","Store","modules","VueRouter","routes","path","router","mode","options","toURL","location","href","init","newAst","isInitPage","NProgress","configure","showSpinner","beforeEach","to","from","next","base","fullPath","hash","Init","headers","Accept","afterEach","title","krjziyjz_title","querySelector","setAttribute","krjzik3i_keywords","content","krjzir1m_description","done","onError","history","replaceState","opts","WS","options_params","reconnection","reconnectionDelay","reconnectionTryCount","protocol","startsWith","WebSocket","OPEN","readyState","send","EventTarget","addEventListener","bind","dispatchEvent","constructor","clearTimeout","timeout","setTimeout","CONNECTING","ws","Data","ms","Date","now","source","dist","stop_record","Record","start_record","data_json","record","emit","event","pako","deflate","node_send","buffer","options_default","bind_url","uid","options_use","is_start","_start","connect","state_init","initing","initted","all_controller","onmessage","fetch","method","client_id","disconnect","sendObj","inited","onconnect","handleCloseError","args","controller","ondisconnect","apply","active_websocket","throttle","CLOSED","CLOSING","productionTip","RouterMode","startWebSocket","prototype","$ws","mixin","app","render","h","App","$mount","n","length","parentNode","removeChild","krk7jl7x"],"mappings":"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","file":"ktmlze5j/js/ktmlze5j.chunk-common.js","sourcesContent":["var map = {\n\t\"./module0.js\": \"ca6c\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"19d3\";","// 初始化各种数据\n\nimport Vue from 'vue';\n// cookie\nimport Cookie from \"js-cookie\";\n// 请求库\nimport Axios from 'axios';\n// html 解析库\nimport { parse, walk, SyntaxKind } from \"html5parser\";\n// json5 解析库\nimport JSON5 from 'json5';\n\n// 工具对象\nconst u = {\n\thtml: {\n\t\tto_ast(html_str) {\n\t\t\tconsole.time(\"to_ast\");\n\n\t\t\tconst waitRemove = [];\n\n\t\t\tlet ast = parse(html_str);\n\n\t\t\t// 不再被动构建 attributeMap，改为自己 walk 时，主动构建\n\t\t\t// let ast = parse(html_str, {\n\t\t\t// \tsetAttributeMap: true,\n\t\t\t// })\n\t\t\twalk(ast, {\n\t\t\t\tenter(node, parent) {\n\t\t\t\t\t// 记录 parent，方便删除无用的子节点\n\t\t\t\t\tnode.parent = parent;\n\t\t\t\t\t// 删除无用属性\n\t\t\t\t\tdelete node.attributeMap;\n\n\t\t\t\t\tswitch (node.type) {\n\t\t\t\t\t\t// 文本节点\n\t\t\t\t\t\tcase SyntaxKind.Text:\n\t\t\t\t\t\t\tvar trimVal = node.value.trim();\n\t\t\t\t\t\t\t// 空文本节点\n\t\t\t\t\t\t\tif (trimVal === \"\") {\n\t\t\t\t\t\t\t\twaitRemove.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// 非空文本节点\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tnode.value = trimVal;\n\t\t\t\t\t\t\t\tnode.html = function () {\n\t\t\t\t\t\t\t\t\treturn node.value;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tnode.toString = function () {\n\t\t\t\t\t\t\t\t\treturn node.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t// 标签节点\n\t\t\t\t\t\tcase SyntaxKind.Tag:\n\t\t\t\t\t\t\t// 注释节点\n\t\t\t\t\t\t\tif ([\"!--\"].includes(node.name)) {\n\t\t\t\t\t\t\t\twaitRemove.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// 修改 node 属性名\n\t\t\t\t\t\t\t\tnode.attr = node.attributes;\n\t\t\t\t\t\t\t\tdelete node.attributes;\n\n\t\t\t\t\t\t\t\t// 重写所有 attrMap\n\t\t\t\t\t\t\t\tnode.attrMap = {};\n\t\t\t\t\t\t\t\t// 重写所有 attr\n\t\t\t\t\t\t\t\tnode.attr = node.attr.reduce((sum, item) => {\n\t\t\t\t\t\t\t\t\tlet obj = {\n\t\t\t\t\t\t\t\t\t\tkey: item.name.value,\n\t\t\t\t\t\t\t\t\t\t// 对所有 value 进行解码，统一处理 & 被转义的情况\n\t\t\t\t\t\t\t\t\t\t// 此处三元运算，是为了防止，value 无值\n\t\t\t\t\t\t\t\t\t\tval: item.value ? u.html.get_text(item.value.value) : item.value,\n\t\t\t\t\t\t\t\t\t\t// 单双引号，便于之后 ast.to_html\n\t\t\t\t\t\t\t\t\t\tquote: item.value ? item.value.quote : null,\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tObject.defineProperty(node.attrMap, obj.key, {\n\t\t\t\t\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\t\t\t\t\treturn obj.val;\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tset(val) {\n\t\t\t\t\t\t\t\t\t\t\tobj.val = val;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t\tsum.push(obj);\n\t\t\t\t\t\t\t\t\treturn sum;\n\t\t\t\t\t\t\t\t}, [])\n\n\t\t\t\t\t\t\t\t// 附加 html 属性\n\t\t\t\t\t\t\t\tif (node.close) {\n\t\t\t\t\t\t\t\t\tnode.html = function () {\n\t\t\t\t\t\t\t\t\t\treturn html_str.slice(node.open.start, node.close.end);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnode.html = function () {\n\t\t\t\t\t\t\t\t\t\treturn html_str.slice(node.open.start, node.open.end);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// 重写 node 的 toString\n\t\t\t\t\t\t\t\tnode.toString = function () {\n\t\t\t\t\t\t\t\t\treturn u.html.get_text(this.html());\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// 有 id 属性的 node，提到根节点来\n\t\t\t\t\t\t\t\tlet id = node.attrMap.id;\n\n\t\t\t\t\t\t\t\tif (id) {\n\t\t\t\t\t\t\t\t\tast[id] = node;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// 有 class 属性的 node，提到根节点来\n\t\t\t\t\t\t\t\tif (node.attrMap.class) {\n\t\t\t\t\t\t\t\t\tlet arr = node.attrMap.class.trim().replace(/[\\s\\t\\r\\n]+/, ' ')\n\t\t\t\t\t\t\t\t\t\t.split(' ');\n\n\t\t\t\t\t\t\t\t\tarr.forEach(item => {\n\t\t\t\t\t\t\t\t\t\tif (Array.isArray(ast[item])) {\n\t\t\t\t\t\t\t\t\t\t\tast[item].push(node);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tast[item] = [node];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// 有cid，则设置属性到 body 的同级\n\t\t\t\t\t\t\t\tlet cid = node.attrMap.cid\n\t\t\t\t\t\t\t\tif (cid) {\n\t\t\t\t\t\t\t\t\tif (parent.cid) {\n\t\t\t\t\t\t\t\t\t\tparent.cid[cid] = node;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tparent.cid = {\n\t\t\t\t\t\t\t\t\t\t\t[cid]: node\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// 根据 type 确定是否需要格式化为 JSON5\n\t\t\t\t\t\t\t\tswitch (node.attrMap['type']?.replace(/[\\s\\t]/g, '')) {\n\t\t\t\t\t\t\t\t\tcase 'text/json5':\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tnode.json = JSON5.parse(node.body[0]?.value?.trim() || '{}');\n\t\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.error(`json5 parse error: ${node.html()}`)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// 遍历删除无用的 node\n\t\t\twaitRemove.forEach(item => {\n\t\t\t\tif (item.parent) {\n\t\t\t\t\titem.parent.body.splice(item.parent.body.indexOf(item), 1)\n\t\t\t\t} else {\n\t\t\t\t\tast.splice(ast.indexOf(item), 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.timeEnd(\"to_ast\");\n\t\t\treturn ast;\n\t\t},\n\t\tget_text(str) {\n\t\t\tlet div = document.createElement('div');\n\t\t\tdiv.innerHTML = str;\n\t\t\treturn div.innerText.trim();\n\t\t},\n\t},\n\tast: {\n\t\tto_html(ast) {\n\t\t\tif (!Array.isArray(ast)) {\n\t\t\t\tthrow new Error('please input array');\n\t\t\t}\n\t\t\tconsole.time('to_html');\n\n\t\t\tlet res = '';\n\t\t\twalk(ast, {\n\t\t\t\t// 属性节点拼装\n\t\t\t\t// 需要区分 enter 和 leave\n\t\t\t\t// 确保 子节点已 拼装完毕\n\t\t\t\t// 才在 leave 中拼装 close 属性\n\t\t\t\tenter(node) {\n\t\t\t\t\tswitch (node.type) {\n\t\t\t\t\t\tcase SyntaxKind.Text:\n\t\t\t\t\t\t\tres += node.value.trim();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase SyntaxKind.Tag: {\n\t\t\t\t\t\t\tlet attr = node.attr.map(i => {\n\t\t\t\t\t\t\t\treturn `${i.key}=${i.quote}${i.val}${i.quote}`;\n\t\t\t\t\t\t\t}).join(' ');\n\n\t\t\t\t\t\t\tres += `<${node.rawName} ${attr}>`\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tleave(node) {\n\t\t\t\t\tswitch (node.type) {\n\t\t\t\t\t\tcase SyntaxKind.Tag:\n\t\t\t\t\t\t\t// 如果元素节点有结束标签\n\t\t\t\t\t\t\tif (node.close) {\n\t\t\t\t\t\t\t\tres += node.close.value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconsole.timeEnd('to_html');\n\n\t\t\treturn res;\n\t\t}\n\t},\n\tjson: {\n\t\t// 针对一些可能 单双引号 混用的不合法的json，处理，使用场景很少\n\t\tnormalize(str) {\n\t\t\treturn str\n\t\t\t\t.replace(/'/g, '\"').replace(/[\\s\\r\\n]*([\\][{},\"])[\\s\\r\\n]*/g, '$1').replace(/,([}\\]])/g, '$1').replace(/([{,])([^:{\"]+?):/g, '$1\"$2\":');\n\t\t}\n\t}\n}\n\n// AST 数据\nconst ast = u.html.to_ast([...document.querySelectorAll('.data')].map(i => {\n\treturn i.outerHTML\n}).join(''));\n\n// localStorage 数据\n// localStorage 版本号\nconst v = `krk7p4iy`;\nconst local = {\n\tget() {\n\t\tlet obj;\n\t\tlet store;\n\n\t\t// 防止无写存储权限，导致 app 崩溃\n\t\ttry {\n\t\t\tstore = localStorage.getItem(\"wuxuwang.com\");\n\t\t} catch (e) {\n\t\t\t// 无权限写存储，直接 return\n\t\t\treturn console.error(e);\n\t\t}\n\n\t\t// json 解析错误，则重置\n\t\ttry {\n\t\t\tobj = JSON.parse(store || \"{}\");\n\n\t\t\t// 版本号错误，则重置\n\t\t\tif (!obj.v || parseInt(obj.v, 36) < parseInt(v, 36)) {\n\t\t\t\tlocal.reset();\n\t\t\t\treturn local.get();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('local get JSON.parse error');\n\t\t\tlocal.reset();\n\t\t\treturn local.get();\n\t\t}\n\t\tlocal.value = obj;\n\t\treturn obj;\n\t},\n\treset() {\n\t\tlocal.value = {\n\t\t\tv,\n\t\t};\n\t\tlocal.set();\n\t},\n\t// 有参数-合并保存 value\n\t// 无参数-直接保存 value\n\tset(obj) {\n\t\tif (obj) {\n\t\t\tthis.value = Object.assign({}, this.value, obj)\n\t\t}\n\t\t// 防止无写存储权限，导致 app 崩溃\n\t\ttry {\n\t\t\tlocalStorage.setItem(\"wuxuwang.com\", JSON.stringify(this.value));\n\t\t} catch (e) {\n\t\t\treturn console.error(e);\n\t\t}\n\t},\n};\nObject.assign(local, {\n\tvalue: local.get()\n})\n\nconst mixinData = {\n\tast,\n\tlocal,\n\t// 异步加载的组件\n\tcoms: [],\n\t// body 的 class\n\tbodyClass: [],\n}\nconst protoData = {\n\t$win: window,\n\t$u: u,\n\t$cookie: Cookie,\n\t$axios: Axios,\n\t$get(url, data, config) {\n\t\treturn Axios.get(url, {\n\t\t\tparams: data,\n\t\t\t...config,\n\t\t})\n\t},\n\t$post(url, data, config) {\n\t\treturn Axios.post(url, data, config)\n\t},\n\t$vue: Vue,\n};\n\nexport default {\n\t// 全局混入 data 中的数据\n\tmixinData,\n\t// 挂载在 Vue 原型上的数据\n\tprotoData\n}\n\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view'),_c('div',_vm._l((_vm.coms),function(item,index){return _c(item,_vm._g(_vm._b({key:index,tag:\"component\"},'component',item.attrs,false),item.listeners),_vm._l((item.slots),function(ite,inde){return _c(ite,_vm._g(_vm._b({key:(index + \"_\" + inde),tag:\"component\"},'component',ite.attrs,false),ite.listeners))}),1)}),1),_c('div',{class:_vm.bodyClass,attrs:{\"id\":\"ksh34m2s\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div id=\"app\">\n        <router-view> </router-view>\n        <!-- 异步组件，比如弹窗 -->\n        <div>\n            <component\n                v-for=\"(item, index) in coms\"\n                :key=\"index\"\n                :is=\"item\"\n                v-on=\"item.listeners\"\n                v-bind=\"item.attrs\"\n            >\n                <component\n                    v-for=\"(ite, inde) in item.slots\"\n                    :is=\"ite\"\n                    :key=\"`${index}_${inde}`\"\n                    v-on=\"ite.listeners\"\n                    v-bind=\"ite.attrs\"\n                ></component>\n            </component>\n        </div>\n        <!-- 临时 div，用于生成并获取 class，应用到 body 上 -->\n        <div id=\"ksh34m2s\" :class=\"bodyClass\"></div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"App\",\n    watch: {\n        // 绑定 bodyClass 到 body 上\n        bodyClass() {\n            this.$nextTick(() => {\n                document.body.classList = document.querySelector(\n                    \"#ksh34m2s\"\n                ).classList;\n            });\n        },\n    },\n};\n</script>\n\n<style lang=\"less\">\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3a7fd272&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const modulesFiles = require.context('.', true, /[^index]\\.js$/)\r\n\r\n// webpack 读取当前目录下的所有除了 index.js 的模块，将导出合并为一个\r\nconst sum = modulesFiles.keys().reduce((sum, modulePath) => {\r\n  const value = modulesFiles(modulePath)\r\n  const { state, mutations, actions } = value.default\r\n\r\n  Object.assign(sum.state, state)\r\n  Object.assign(sum.mutations, mutations)\r\n  Object.assign(sum.actions, actions)\r\n\r\n  return sum\r\n}, {\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\n\r\nexport default sum","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport modules from './modules'\n\nVue.use(Vuex)\n\n// 将所有 module 合并为一个 module 放置在 根下，命名问题冲突靠 时间戳前缀解决\nexport default new Vuex.Store(modules)\n","import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nVue.use(VueRouter)\n\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tname: 'home',\n\t\tcomponent: () => import('@/views/Home.vue'),\n\t},\n\t{\n\t\tpath: '/index/about',\n\t\tname: 'about',\n\t\tcomponent: () => import('@/views/About.vue')\n\t}\n]\n\nconst router = new VueRouter({\n\tmode: 'history',\n\troutes\n})\n\nexport default router\n","import router from './index'\n// 进度条\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n// 导入初始化的数据\nimport Init from '@/init'\n\nlet options = {\n\t// 路由模式\n\t// ast: 前端路由-请求页面\n\t// api: 前端路由-请求接口\n\t// refresh：后端路由-刷新页面\n\tmode: 'ast'\n};\n// to url\nlet toURL = location.href;\n\nfunction init() {\n\t// 前端路由需要用到的新的 AST 数据\n\tlet newAst = null;\n\t// 是否是初始化进入页面\n\tlet isInitPage = true;\n\t// 配置进度条\n\tNProgress.configure({ showSpinner: false })\n\n\trouter.beforeEach(async (to, from, next) => {\n\t\t// 加上 base\n\t\ttoURL = `${router.options.base ?? ''}${to.fullPath}`\n\n\t\tswitch (options.mode) {\n\t\t\t// 后端路由-refresh\n\t\t\tcase 'refresh':\n\t\t\t\tif (isInitPage) {\n\t\t\t\t\tnext();\n\t\t\t\t} else {\n\t\t\t\t\t// 如果只是改变了 hash ，则前端路由\n\t\t\t\t\tif ((from.fullPath.replace(from.hash, '') === to.fullPath.replace(to.hash, ''))) {\n\t\t\t\t\t\tnext();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocation = toURL;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// 前端路由-ast\n\t\t\t// 需要异步请求页面数据，然后解析，更新 ast\n\t\t\t// 前端路由，记得在组件的 destroy 钩子中销毁用不到的数据\n\t\t\tcase 'ast': {\n\t\t\t\t// 进度条开始\n\t\t\t\tNProgress.start();\n\n\t\t\t\t// 不是初次进入页面\n\t\t\t\tif (!isInitPage) {\n\t\t\t\t\t// 请求数据\n\t\t\t\t\tlet res = await Init.protoData.$get(toURL, null, {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t// axios 默认请求头接收的是 json，此处请求的页面，接收的应为 html，改为接收所有\n\t\t\t\t\t\t\tAccept: '*/*',\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// 解析数据为新的 AST\n\t\t\t\t\tnewAst = Init.protoData.$u.html.to_ast(\n\t\t\t\t\t\tres.data\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tnext();\n\t\t\t}\n\t\t\t\tbreak;\n\t\t\t// 前端路由-api\n\t\t\tdefault:\n\t\t\t\t// 进度条开始\n\t\t\t\tNProgress.start();\n\n\t\t\t\tnext();\n\t\t}\n\t})\n\n\trouter.afterEach(() => {\n\t\tswitch (options.mode) {\n\t\t\tcase 'ast':\n\t\t\t\t// 不是第一次进入页面\n\t\t\t\tif (!isInitPage) {\n\n\t\t\t\t\t// 更新-TKD\n\t\t\t\t\tdocument.title = newAst.krjziyjz_title.toString();\n\t\t\t\t\tdocument.querySelector('#krjzik3i_keywords').setAttribute('content', newAst.krjzik3i_keywords.attrMap.content)\n\t\t\t\t\tdocument.querySelector('#krjzir1m_description').setAttribute('content', newAst.krjzir1m_description.attrMap.content)\n\n\t\t\t\t\t// 更新-AST\n\t\t\t\t\tInit.mixinData.ast = Init.protoData.$u.html.to_ast(\n\t\t\t\t\t\t// // 为了节约内存，newAst 中仍然只提取 class=data 中的数据\n\t\t\t\t\t\t// 所以需要 to_html 再 to_ast\n\t\t\t\t\t\tInit.protoData.$u.ast.to_html(newAst.data)\n\t\t\t\t\t);\n\n\t\t\t\t\tnewAst = null;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tNProgress.done();\n\t\t// 结束第一次进入页面\n\t\tisInitPage = false;\n\t})\n\n\trouter.onError(() => {\n\t\t// 导航故障，结束加载\n\t\tNProgress.done();\n\t\t// 导航故障，保持 to url 不变\n\t\thistory.replaceState({}, '', toURL);\n\t})\n}\n\nexport default {\n\t// 路由模式\n\tconfig(opts) {\n\t\toptions = {\n\t\t\t...options,\n\t\t\t...opts,\n\t\t}\n\t\t// 初始化路由模式\n\t\tinit();\n\t}\n}\n","export default class WS extends EventTarget {\n\t// 是否手动触发了修改状态的逻辑\n\t#is_manual = false\n\t// 默认选项\n\t#options_default = {\n\t\treconnection: true,\n\t\treconnectionDelay: 3000,\n\t\treconnectionTryCount: 5,\n\t\tprotocol: location.href.startsWith('https') ? 'wss' : 'ws',\n\t\turl: null,\n\t};\n\t// 参数选项\n\t#options_params = {};\n\t// 使用选项\n\t#options_use = {};\n\t// websocket 实例\n\t#socket = null;\n\n\tconstructor(options_params = {}) {\n\t\tif (!('WebSocket' in window)) {\n\t\t\tconsole.error('not support websocket');\n\t\t\treturn null;\n\t\t}\n\t\tsuper();\n\n\t\t// 保存参数\n\t\tthis.#options_params = options_params;\n\t\t// 合并参数\n\t\tthis.#reset_options_use();\n\n\t\tif (!this.#options_use.url) {\n\t\t\tthrow new Error('url required');\n\t\t}\n\t}\n\t// 重置参数\n\t// eslint-disable-next-line no-dupe-class-members\n\t#reset_options_use() {\n\t\tthis.#options_use = {\n\t\t\t...this.#options_default,\n\t\t\t...this.#options_params\n\t\t}\n\t\treturn this;\n\t}\n\t// 创建 WebSocket\n\t// eslint-disable-next-line no-dupe-class-members\n\t#create() {\n\t\tthis.#socket = new WebSocket(`${this.#options_use.protocol}://${this.#options_use.url}`);\n\n\t\tthis.#socket.addEventListener('open', this.#handleOpen.bind(this));\n\t\tthis.#socket.addEventListener('close', this.#handleDisconnect.bind(this));\n\t\tthis.#socket.addEventListener('error', this.#handleDisconnect.bind(this));\n\n\t\t// 代理派发事件\n\t\t['open', 'close', 'error', 'message'].forEach(item => {\n\t\t\tthis.#socket.addEventListener(item, (e) => {\n\t\t\t\t// 触发同名事件\n\t\t\t\t// 不能直接派发，必须重新构造\n\t\t\t\tthis.dispatchEvent(new e.constructor(e.type, e));\n\t\t\t})\n\t\t})\n\t}\n\t// 处理-打开了连接\n\t// eslint-disable-next-line no-dupe-class-members\n\t#handleOpen() {\n\t\t// 重置-选项\n\t\tthis.#reset_options_use();\n\t}\n\t// 处理-断开\n\t// eslint-disable-next-line no-dupe-class-members\n\t#handleDisconnect(e) {\n\t\t// 防止 close 和 error 连续出发两次????????\n\t\tclearTimeout(this.#handleDisconnect.timeout);\n\n\t\tswitch (e.code) {\n\t\t\t// 1000 是收到了关闭信号，正常关闭不重连，怀疑 gatewayworker close 时，没有正确发送关闭信号，导致 code 收到 1006\n\t\t\tcase 1000:\n\t\t\t\treturn this;\n\t\t\tdefault:\n\t\t\t\t// 如果允许自动连接\n\t\t\t\tif (this.#options_use.reconnection) {\n\t\t\t\t\t// 重连次数已用完\n\t\t\t\t\tif (this.#options_use.reconnectionTryCount <= 0) {\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\t// 非手动重连\n\t\t\t\tthis.#is_manual = false;\n\t\t\t\tthis.#handleDisconnect.timeout = setTimeout(() => {\n\t\t\t\t\tthis.#connect();\n\t\t\t\t}, 100);\n\t\t}\n\t}\n\t// eslint-disable-next-line no-dupe-class-members\n\t#connect() {\n\t\t// 如果已经连接上了\n\t\tif ([WebSocket.OPEN, WebSocket.CONNECTING].includes(this.#socket?.readyState)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 自动重连，次数 -1\n\t\tif (!this.#is_manual) {\n\t\t\tthis.#options_use.reconnectionTryCount--;\n\t\t}\n\n\t\tif (this.#is_manual) {\n\t\t\tthis.#create();\n\t\t}\n\t\t// 自动重连，要有延迟\n\t\telse {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.#create();\n\t\t\t}, this.#options_use.reconnectionDelay);\n\t\t}\n\n\t\treturn this;\n\t}\n\tconnect() {\n\t\tthis.#is_manual = true;\n\n\t\tthis.#connect();\n\n\t\treturn this;\n\t}\n\tdisconnect() {\n\t\tthis.#is_manual = true;\n\n\t\tthis.#socket?.close();\n\n\t\treturn this;\n\t}\n\tsend(data) {\n\t\tif (![WebSocket.OPEN].includes(this.#socket?.readyState)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.#socket.send(data);\n\n\t\treturn this;\n\t}\n\tsendObj(obj) {\n\n\t\treturn this.send(JSON.stringify(obj))\n\t}\n\tset options_use(options_params = {}) {\n\t\tthis.#options_params = options_params;\n\n\t\tthis.#reset_options_use();\n\t}\n\tget options_use() {\n\t\treturn {\n\t\t\t...this.#options_use\n\t\t}\n\t}\n\tget readyState() {\n\t\treturn this.#socket.readyState;\n\t}\n}\n","import WS from '@/assets/js/utils/ws';\r\nimport Record from './controller/record';\r\nimport Data from './data/data'\r\nimport { throttle } from 'lodash-es';\r\n\r\nconst options_default = {\r\n    // websocket 协议\r\n    protocol: 'ws',\r\n    // websocket 网址\r\n    // 'remote.513902.xyz:2348'\r\n    url: null,\r\n    // https://remote.513902.xyz/websocket/bindUid\r\n    // 绑定地址\r\n    bind_url: null,\r\n    // 用户 uid\r\n    uid: null,\r\n}\r\nlet options_use = {}\r\n\r\nlet is_start = false;\r\n\r\nexport let ws;\r\n\r\n// Init.protoData.$cookie.get('PHPSESSID')\r\nfunction _start(options_params) {\r\n    if (is_start) {\r\n        return;\r\n    }\r\n    is_start = true;\r\n\r\n    // 配置\r\n    options_use = {\r\n        ...options_default,\r\n        ...options_params,\r\n    }\r\n\r\n    // 创建 websocket\r\n    ws = new WS({\r\n        protocol: options_use.protocol,\r\n        url: options_use.url,\r\n    });\r\n    ws.connect();\r\n\r\n    // 状态-初始化\r\n    let state_init = {\r\n        init: 'init',\r\n        initing: 'initing',\r\n        initted: 'initted',\r\n\r\n        state: 'init',\r\n    }\r\n    // 所有的控制器\r\n    const all_controller = [\r\n        Record\r\n    ];\r\n\r\n    // 处理-收到消息\r\n    ws.addEventListener('message', async e => {\r\n        let data_json = {};\r\n\r\n        try {\r\n            data_json = JSON.parse(e.data);\r\n        } catch (e) {\r\n            return console.error(e);\r\n        }\r\n\r\n        // 根据 dist 确定数据交给哪个控制器处理\r\n        switch (data_json.dist) {\r\n            case 'record':\r\n                Record.onmessage(data_json);\r\n                break;\r\n            default:\r\n                // type 数据类型\r\n                switch (data_json.type) {\r\n                    // 初始化\r\n                    case 'init':\r\n                        {\r\n                            // 如果不是初始化状态\r\n                            if (state_init.state !== state_init.init) {\r\n                                return;\r\n                            }\r\n                            // 正在初始化\r\n                            state_init.state = state_init.initing;\r\n\r\n                            try {\r\n                                await fetch(options_use.bind_url, {\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        client_id: data_json.client_id,\r\n                                        uid: options_use.uid,\r\n                                    })\r\n                                })\r\n                            } catch (e) {\r\n                                console.error(e);\r\n\r\n                                // 初始状态\r\n                                state_init.state = state_init.init;\r\n\r\n                                // 绑定报错，断开 socket\r\n                                ws.disconnect();\r\n                                return;\r\n                            }\r\n                            // 绑定成功，通知 websocket server 进行验证\r\n                            ws.sendObj(Data.node_send({\r\n                                source: 'main',\r\n                                type: 'inited'\r\n                            }))\r\n                        }\r\n                        break;\r\n                    // 初始化完成\r\n                    case 'inited':\r\n                        state_init.state = state_init.inited;\r\n\r\n                        // 初始化完成，通知其他控制器\r\n                        all_controller.forEach(item => {\r\n                            item.onconnect();\r\n                        })\r\n                        break;\r\n                    // 关闭 socket\r\n                    case 'close':\r\n                        ws.disconnect();\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n\r\n    // 处理-连接断开\r\n    const handleCloseError = function (...args) {\r\n\r\n        clearTimeout(handleCloseError.timeout);\r\n\r\n        handleCloseError.timeout = setTimeout(() => {\r\n            // 如果处于已初始化完成状态 || 正在初始化\r\n            // 断开，才算是断开连接\r\n            if (state_init.state !== state_init.init) {\r\n                all_controller.forEach(controller => {\r\n                    controller.ondisconnect.apply(this, args);\r\n                })\r\n            }\r\n            // 重置-初始化状态\r\n            state_init.state = state_init.init;\r\n        }, 50);\r\n\r\n    }\r\n    ws.addEventListener('close', handleCloseError);\r\n    ws.addEventListener('error', handleCloseError);\r\n\r\n    // 处理-重新连接 websocket\r\n    // throttle 节流\r\n    const active_websocket = throttle(function () {\r\n        // socket 已关闭\r\n        if ([WebSocket.CLOSED, WebSocket.CLOSING].includes(ws.readyState)) {\r\n            // 自动重连次数已用尽 || 未启用自动重连\r\n            if (ws.options_use.reconnectionTryCount <= 0 || !ws.options_use.reconnection) {\r\n                ws.connect();\r\n            }\r\n        }\r\n    }, 3000);\r\n    window.addEventListener('touchstart', active_websocket);\r\n    window.addEventListener('mousemove', active_websocket);\r\n    window.addEventListener('scroll', active_websocket);\r\n}\r\n\r\nexport const start = (...args) => {\r\n    try {\r\n        _start(...args);\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}","export default class Data {\r\n    // 发送数据的节点\r\n    static node_send(node) {\r\n        return {\r\n            ms: Date.now(),\r\n            source: null,\r\n            type: null,\r\n            ...node,\r\n        }\r\n    }\r\n    // 接收数据的节点\r\n    static node_receive(node) {\r\n        return {\r\n            dist: null,\r\n            type: null,\r\n            ...node,\r\n        }\r\n    }\r\n}","import { record } from 'rrweb';\nimport { ws } from '../index';\nimport Data from '../data/data';\nimport pako from 'pako';\n\nlet stop_record = () => { };\n\nexport default class Record {\n\t// 已连接\n\tstatic onconnect() {\n\t\tconsole.log('开始录制');\n\n\t\tRecord.start_record();\n\t}\n\t// 已断开\n\tstatic ondisconnect() {\n\t\tconsole.log('停止录制');\n\t\tstop_record();\n\t}\n\t// 收到数据\n\tstatic onmessage(data_json) {\n\t\tswitch (data_json.type) {\n\t\t\tcase 'checkout':\n\t\t\t\tconsole.log('重新录制');\n\t\t\t\tRecord.start_record();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t// 开始记录\n\tstatic start_record() {\n\t\tstop_record();\n\n\t\tstop_record = record({\n\t\t\temit(event) {\n\t\t\t\t// 发送数据\n\t\t\t\tws.send(\n\t\t\t\t\tpako.deflate(\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\tData.node_send({\n\t\t\t\t\t\t\t\tsource: 'record',\n\t\t\t\t\t\t\t\ttype: 'event',\n\t\t\t\t\t\t\t\tevent: (event),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t).buffer\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\t}\n}","import Init from './init';\nimport Vue from 'vue'\nimport App from './App.vue'\nimport store from './store'\n// 路由模式\nimport RouterMode from './router/mode'\nimport router from './router'\n// WebSocket 连接\nimport { start as startWebSocket, ws } from './assets/js/websocket'\n\nVue.config.productionTip = false\n\n// 配置路由模式\nRouterMode.config({\n\tmode: 'ast',\n});\n\n// 开启 websocket\nstartWebSocket({\n\tprotocol: 'ws',\n\turl: 'remote.513902.xyz:80/wss',\n\t// 绑定地址\n\tbind_url: 'http://remote.513902.xyz/websocket/bindUid',\n\t// 用户 uid\n\tuid: Init.protoData.$cookie.get('PHPSESSID'),\n});\nVue.prototype.$ws = ws;\n\n// 混入可观测的数据\nVue.mixin({\n\tdata() {\n\t\treturn {\n\t\t\t// fix-bug: 如果直接返回 mixinData 对象，则 在使用 vue-echarts 时，貌似 vue-echarts 会修改到 mixinData，导致所有组件被混入 echarts 的一些方法\n\t\t\t...Init.mixinData\n\t\t}\n\t}\n})\n// 附加其他数据\nObject.assign(Vue.prototype, Init.protoData);\n\n// 批量注册基础组件\n// ??????\n\n\nconst app = new Vue({\n\trouter,\n\tstore,\n\trender: h => h(App)\n}).$mount('#app');\n\n// 生产环境，删除一些DOM\nif (process.env.NODE_ENV === 'production') {\n\tvar n = document.querySelectorAll(\".data,.node_remove\");\n\tfor (var i = 0; i < n.length; i++) {\n\t\tn[i].parentNode.removeChild(n[i]);\n\t}\n}\n\nif (process.env.NODE_ENV === \"development\") {\n\twindow.app = app;\n} else {\n\twindow.krk7jl7x = app;\n}\n\n","// import Init from '@/init'\n\n// const { $post: Post, $get: Get } = Init.protoData;\n\nconst state = {\n}\nconst mutations = {\n}\nconst actions = {\n}\n\nexport default {\n\tstate,\n\tmutations,\n\tactions\n}\n"],"sourceRoot":""}